pipeline {
  agent any

  environment {
    SONARQUBE_TOKEN = credentials('sonarqube-token')
    DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
    GITOPS_REPO = 'https://github.com/venakteshmuddada/gitops-manifests.git'
    IMAGE_NAME = 'venkateshadmin/cicd-flow'
    IMAGE_TAG = "${BUILD_NUMBER}"
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/venakteshmuddada/CICD-JavaSprigboot.git', branch: 'master'
      }
    }

    stage('SonarQube Scan') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          withSonarQubeEnv('MySonarQubeServer') {
            sh 'mvn clean verify sonar:sonar -Dsonar.projectKey=spring-boot-app -Dsonar.token=$SONARQUBE_TOKEN'
          }
        }
      }
    }

    stage('Build') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package -DskipTests'
        }
      }
    }

    stage('Docker Build & Push') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh '''
            docker build -t $IMAGE_NAME:$IMAGE_TAG .
            echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
            docker push $IMAGE_NAME:$IMAGE_TAG
          '''
        }
      }
    }

    stage('Update GitOps Repo') {
      steps {
        sh '''
          git config --global user.email "jenkins@ci.com"
          git config --global user.name "jenkins"
          git clone $GITOPS_REPO gitops-manifests
          cd gitops-manifests/overlays/dev
          sed -i "s|image:.*|image: $IMAGE_NAME:$IMAGE_TAG|" image-patch.yaml
          git add image-patch.yaml
          git commit -m "Update image tag to $IMAGE_TAG"
          git push https://$GITHUB_PAT@github.com/venakteshmuddada/gitops-manifests.git
        '''
      }
    }
  }
}
